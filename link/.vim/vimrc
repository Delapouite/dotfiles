" set options - NO spaces around =

" viM
set nocompatible

" better communication with OS
set clipboard=unnamedplus
set mouse=a

" colors
set t_Co=256
set background=dark
hi Cursor ctermfg=14 ctermbg=white
syntax on

" display invisible chars
set list
set listchars=nbsp:•,eol:¬,tab:\¦\ ,trail:~,extends:▶,precedes:◀
" replace with fancy chars if declared (see after/syntax/javascript.vim)
set conceallevel=2
set lazyredraw

" crosshair on focus
augroup BgHighlight
	autocmd WinEnter * set cursorline cursorcolumn
	autocmd WinLeave * set nocursorline nocursorcolumn
augroup END
" room to breath
set scrolloff=5

" dynamic line numbers
set number
autocmd InsertEnter * :set norelativenumber
autocmd InsertLeave * :set relativenumber

" search
set hlsearch
set incsearch

" dirs
set directory=~/.vim/swap/
set backupdir=~/.vim/backup/
set undodir=~/.vim/undo/
set undofile

" tabs, default: T4 @see mappings.vim
set noexpandtab
set autoindent
set colorcolumn=80,120
set shiftwidth=4
set softtabstop=4
set tabstop=4

" don't truncate words
set linebreak

" jump between start and end HTML tags
runtime! macros/matchit.vim

" statusline

" always display
set laststatus=2

set statusline=%F\      "filename
set statusline+=[
set statusline+=%{strlen(&fenc)?&fenc:'none'}, "file encoding
set statusline+=%{&ff}, "file format (unix, windows)
set statusline+=%{getfsize(expand('%%:p'))}b "file size
set statusline+=]
set statusline+=%y      "filetype
set statusline+=%h      "help file flag
set statusline+=%m      "modified flag
set statusline+=%r      "read only flag
set statusline+=%=      "left/right separator
set statusline+=%c,     "cursor column
set statusline+=%l/%L   "cursor line/total lines
set statusline+=\ %P    "percent through file

" used by gf to follow ES6 import - Ctrl-o to come back
set suffixesadd=.js,.jsx

" Ctrl-p will look in dictionary if set spell is activated
set complete=.,w,b,u,t,i,kspell

set timeoutlen=1000 ttimeoutlen=0

" sources

source ~/.vim/plugins.vim
source ~/.vim/mappings.vim
source ~/.vim/autocmds.vim
source ~/.vim/functions.vim

" lang specific mappings
if !empty(system("setxkbmap -print|grep bepo"))
	source ~/.vim/vimrc.bepo
" elseif !empty(system("setxkbmap -print|grep lafayette"))
" 	source ~/.vim/vimrc.lafayette
else
	source ~/.vim/vimrc.azerty
endif
